#!/usr/bin/env python3

from datetime import datetime
import json
import os.path
import time

def main():
    filepath = '/home/cowrie/cowrie/var/log/cowrie/cowrie.json'
    try:
        while True:
            try:
                datetime_now = datetime.today()
                if not os.path.exists('/home/cowrie/cowrie/var/log/cowrie/malware/'):
                    os.mkdir('/home/cowrie/cowrie/var/log/cowrie/malware/')
                with open(filepath, "r") as f:
                    for line in f:
                        if valid_json(line):
                            login_count = 0
                            data = json.loads(line)
                            delta = count_delta(datetime_now, data['timestamp'])
                            if delta == 0 and 'cowrie.login' in data['eventid']:
                                datapath = '/home/cowrie/cowrie/var/log/cowrie/malware/' + data['src_ip']
                                if not os.path.exists(datapath) :
                                    os.mkdir(datapath)
                                if 'cowrie.login.success' in data['eventid']:
                                    record_credential(data)
                                    record_command(data)
                                record_in_log(data, 0, 'login')
                                record_as_dict(data, datetime_now)
                                login_count = count_multiple_login_attempts(data)
                                if login_count > 5:
                                    record_in_log(data, login_count, 'login')
                            elif delta == 0 and data['eventid'] == 'cowrie.command.input':
                                if is_malicious_activity(data):
                                    record_in_log(data, 0, 'malicious')
                                record_command(data)
                            elif delta == 0 and data['eventid'] == 'cowrie.session.closed':
                                record_command(data)
                            elif delta == 0 and data['eventid'] == 'cowrie.session.file_download':
                                record_external_files(data)
                        else: # cowrie.json is still empty
                            continue
                break

            except FileNotFoundError:
                print(f"File '{filepath}' not found. Retrying in 5 seconds...")
                time.sleep(5)  # Wait for 5 seconds before retrying

    except IOError:
        print(f"An error occurred while reading the file '{filepath}'.")

def append_to_file(msg, file_name):
    with open(file_name, "a+") as f:
        f.write(msg+"\n")

def count_delta(datetime_now, readed_datetime):
    if isinstance(datetime_now, str):
        dt_a = datetime.strptime(datetime_now, '%Y-%m-%dT%H:%M:%S.%fZ')
    else:
        dt_a = datetime_now
    dt_b = datetime.strptime(readed_datetime, '%Y-%m-%dT%H:%M:%S.%fZ')
    delta = int((dt_a - dt_b).total_seconds())
    return delta

def count_delta_log(datetime_now, readed_datetime):
    if isinstance(datetime_now, str):
        dt_a = datetime.strptime(datetime_now, '%Y-%m-%dT%H:%M:%S')
    else:
        dt_a = datetime_now
    dt_b = datetime.strptime(readed_datetime, '%Y-%m-%dT%H:%M:%S')
    delta = int((dt_a - dt_b).total_seconds())
    return delta

def count_multiple_login_attempts(data):
    count = 0
    filepath = '/home/cowrie/cowrie/var/log/cowrie/malware/' + data['src_ip'] + '/' + get_date(data['timestamp'], 'T') + '.json'
    if os.path.exists(filepath):
        with open(filepath) as f:
            for line in f:
                readed_data = json.loads(line)
                delta = count_delta(data['timestamp'], readed_data['timestamp'])
                if delta >= 0 and delta <= 15:
                    count += 1
    return count

def dict_is_exist(dict_obj, filepath):
    if os.path.exists(filepath):
        with open(filepath) as f:
            for line in f:
                tmp = json.loads(line)
                if dict_obj == tmp:
                    return True
        return False
    else:
        return False

def get_date(date_time, end_pos):
    if isinstance(date_time, str):
        end_pos = date_time.find(end_pos)
        return date_time[0:end_pos:]
    else:
        return datetime.today().strftime('%Y-%m-%d')
       
def is_malicious_activity(data):
    # TODO: add buffer overflow, ex: run $(python -c "print('\x90'*222 + '\x31\xc0\xb0\x46\x31\xdb\x31\xc9\xcd\x80\xeb\x16\x5b\x31\xc0\x88\x43\x07\x89\x5b\x08\x89\x43\x0c\xb0\x0b\x8d\x4b\x08\x8d\x53\x0c\xcd\x80\xe8\xe5\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68' + '\x94\xfc\xff\xbf')")
    list_of_malicious_activity = ['pwd', 'arp', 'users', 'netstat', 'uname', 'tcpdump', 'insmod', 'crontab', 'rmdir', 'chmod', 'chown', 'chattr', '/dev/null', 'systemctl', 'daemon', 'reload', 'start', 'history -c', 'wget', 'curl', '/etc/passwd', '/etc/ld.so.preload']
    for activity in list_of_malicious_activity:
        if activity in data['input']: 
            return True
    return False

def msg_is_exist(msg, filepath):
    if os.path.exists(filepath):
        with open(filepath) as f:
            for line in f:
                if msg == line.replace('\n',''):
                    return True
        return False
    else:
        return False

def record_as_dict(data, datetime_now):
    dict_obj ={
        "eventid" : data['eventid'],
        "username" : data['username'],
        "password" : data['password'],
        "timestamp" : data['timestamp']
        }
    filepath_d = '/home/cowrie/cowrie/var/log/cowrie/malware/' + data['src_ip'] + '/' + get_date(datetime_now, 'T') + '.json'
    if not dict_is_exist(dict_obj, filepath_d):
        with open(filepath_d, "a+") as of:
            json.dump(dict_obj, of)
            of.write('\n')

def record_external_files(data):
    dict_obj ={
        "url" : data['url'],
        "src_ip": data['src_ip'],
        "session": data['session'],
        "outfile": data['outfile'],
        "timestamp" : data['timestamp'],
        }
    if not os.path.exists('/home/cowrie/cowrie/var/log/cowrie/data/'):
        os.mkdir('/home/cowrie/cowrie/var/log/cowrie/data/')
    filepath_d = '/home/cowrie/cowrie/var/log/cowrie/data/external_files.json'
    if not dict_is_exist(dict_obj, filepath_d):
        with open(filepath_d, "a+") as of:
            json.dump(dict_obj, of)
            of.write('\n')

def record_in_log(data, n, parameter):
    if parameter == 'login':
        if n == 0:
            msg = get_date(data['timestamp'], '.') + ' [MWR] ' + data['eventid'] + ' from ' + data['src_ip'] + ' with ' + data['username'] + ':' + data['password']
        else:
            msg = get_date(data['timestamp'], '.') + ' [MWR] Multiple login-attempts from ' + data['src_ip'] + ' detected ('+ str(n) +').'
    elif parameter == 'malicious':
        msg = get_date(data['timestamp'], '.') + ' [MWR] Malicious actions from ' + data['src_ip'] + ' detected. Command might be malicious: ' + data['input']
    filepath = '/home/cowrie/cowrie/var/log/cowrie/honeypot.log'
    if not msg_is_exist(msg, filepath):
        append_to_file(msg, filepath)

def record_command(data):
    dict_obj = dict()
    filepath_d = '/home/cowrie/cowrie/var/log/cowrie/data/recorded/' + data['src_ip'] + '/' + data['session'] + '.json'
    if data['eventid'] == 'cowrie.command.input':
        dict_obj ={
            "eventid" : data['eventid'],
            "input" : data['input'],
            "timestamp" : data['timestamp']
            }
    else:
        if data['eventid'] == 'cowrie.login.success':
            if not os.path.exists('/home/cowrie/cowrie/var/log/cowrie/data/recorded/' + data['src_ip']):
                os.mkdir('/home/cowrie/cowrie/var/log/cowrie/data/recorded/' + data['src_ip'])
        dict_obj = {
            "eventid" : data['eventid'],
            "timestamp" : data['timestamp']
            }
    if not dict_is_exist(dict_obj, filepath_d):
        with open(filepath_d, "a+") as of:
            json.dump(dict_obj, of)
            of.write('\n')

def record_credential(data):
    credential = data['username']+':x:!'+ data['password']
    filepath_c = '/home/cowrie/cowrie/var/log/cowrie/malware/credentials.log'
    if not msg_is_exist(credential, filepath_c):
        append_to_file(credential, filepath_c)

def valid_json(line):
    try:
        json.loads(line)
    except ValueError:
        return False
    return True

if __name__ == '__main__':
    try:
        while True:
            try:
                main()
            except TypeError:
                continue
                
    except KeyboardInterrupt:
        print("\nMalware detector stopped")
